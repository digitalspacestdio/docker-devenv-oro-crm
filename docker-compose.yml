version: '3.4'

services:
  fpm:
    image: "digitalspacestudio/orophp:${COMPOSE_PROJECT_PHP_VERSION-8.0}"
    user: root
    volumes:
      - 'appcode:/var/www'
      - 'npm:/home/linuxbrew/.npm'
      - 'composer:/home/linuxbrew/.composer'
      - './fpm/php-fpm.conf:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-8.0}/php-fpm.conf:ro'
      - './fpm/php.ini:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-8.0}/php.ini:ro'
      - './fpm/prepend.php:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-8.0}/prepend.php:ro'
      - './fpm/msmtprc:/home/linuxbrew/.msmtprc:ro'
      - './fpm/entrypoint.sh:/entrypoint.sh:ro'
    entrypoint: '/entrypoint.sh'
    working_dir: '/var/www'
    networks:
      - 'appnet'
    environment:
      - 'XHGUI_MONGO_HOSTNAME=mongodb'
      - 'XHGUI_MONGO_DATABASE=xhprof'
      - 'COMPOSER_AUTH=$COMPOSE_PROJECT_COMPOSER_AUTH'
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      mail:
        condition: service_healthy
    restart: on-failure:3
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/9000"
      start_period: 60s
      interval: 5s

  cli:
    image: "digitalspacestudio/orophp:${COMPOSE_PROJECT_PHP_VERSION-8.0}"
    user: root
    volumes:
      - 'appcode:/var/www'
      - 'npm:/home/linuxbrew/.npm'
      - 'composer:/home/linuxbrew/.composer'
      - './cli/php.ini:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-8.0}/php.ini:ro'
      - './cli/ext-xdebug.ini:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-8.0}/conf.d/ext-xdebug.ini:ro'
      - './fpm/prepend.php:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-8.0}/prepend.php:ro'
      - './fpm/msmtprc:/home/linuxbrew/.msmtprc:ro'
      - './cli/entrypoint.sh:/entrypoint.sh:ro'
    entrypoint: '/entrypoint.sh'
    working_dir: '/var/www'
    networks:
      - 'appnet'
    environment:
      - 'XHGUI_MONGO_HOSTNAME=mongodb'
      - 'XHGUI_MONGO_DATABASE=xhprof'
      - 'COMPOSER_AUTH=$COMPOSE_PROJECT_COMPOSER_AUTH'
    env_file:
      - .env
    networks:
      - 'appnet'
    depends_on:
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      mail:
        condition: service_healthy

  xhgui:
    image: "xhgui/xhgui:0.18.1"
    volumes:
      - ./xhgui/config:/var/www/xhgui/config
      - ./xhgui/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - XHGUI_MONGO_HOSTNAME=mongodb
      - XHGUI_MONGO_DATABASE=xhprof
    ports:
      - "${COMPOSE_PROJECT_PORT_XHGUI:-81}:80"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: nc -vz -w 1 localhost 80
      start_period: 30s
      interval: 5s

  mail:
    image: "mailhog/mailhog"
    ports:
      - "${COMPOSE_PROJECT_PORT_MAIL_WEBGUI:-8025}:8025"
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: "nc -vz -w 1 localhost 8025"
      start_period: 5s
      interval: 5s

  mongodb:
    image: percona/percona-server-mongodb:4.4
    # (case sensitive) engine: mmapv1, rocksdb, wiredTiger, inMemory
    command: --storageEngine=wiredTiger
    environment:
      - MONGO_INITDB_DATABASE=xhprof
    volumes:
      - ./mongo/initdb.d:/docker-entrypoint-initdb.d
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: mongo --quiet --eval 'db.runCommand("ping").ok' xhgui
      start_period: 30s
      interval: 10s

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2'
    volumes:
      - "elasticsearch-data:/usr/share/elasticsearch/data"
    environment:
      ES_JAVA_OPTS: '${ES_JAVA_OPTS:--Xms256m -Xmx2048m}'
      discovery.type: 'single-node'
    ports:
      - "${COMPOSE_PROJECT_PORT_ELASTICSEARCH:-9200}:9200"
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/9200"
      start_period: 15s
      interval: 5s
      retries: 5


  nginx:
    image: 'crunchgeek/nginx-pagespeed'
    environment:
      NGINX_GEOIP: 'off'
      NGINX_PAGESPEED: 'on'
      NGINX_PAGESPEED_IMG: 'on'
      NGINX_PAGESPEED_JS: 'on'
      NGINX_PAGESPEED_CSS: 'on'
      NGINX_PAGESPEED_STORAGE: 'files'
    depends_on:
      fpm:
        condition: service_healthy
    ports:
      - '${COMPOSE_PROJECT_PORT_HTTP:-80}:80'
    volumes:
      - './www:/var/www:ro'
      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './nginx/pagespeed.conf:/etc/nginx/pagespeed.conf:ro'
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/80"
      start_period: 30s
      interval: 5s

networks:
  appnet:

volumes:
  appcode:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PWD}/www"
  npm:
    driver: local
  composer:
    driver: local
  elasticsearch-data:
    driver: local
